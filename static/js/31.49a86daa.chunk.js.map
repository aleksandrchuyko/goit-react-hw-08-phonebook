{"version":3,"file":"static/js/31.49a86daa.chunk.js","mappings":"uRAMaA,EAAe,SAAC,GAA2B,EAAzBC,SAAyB,EAAfC,SAAgB,IACvD,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAwC,IAAD,IAArCC,cAAiBT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MAC7C,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,QACHP,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MACF,QACE,OAEL,EAUD,OACE,SAACC,EAAA,EAAD,CAAWC,UAAU,OAArB,UACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,UAACC,EAAA,EAAD,CAAMlB,SAZO,SAAAmB,GACnBA,EAAEC,iBACFZ,EAASa,EAAAA,GAAAA,SAAwB,CAAEnB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAMO,WACE,UAACW,EAAA,QAAD,CAAYJ,UAAU,OAAOQ,UAAU,gBAAvC,WACE,SAACJ,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACEK,KAAK,OACLC,YAAY,kBACZtB,KAAK,OACLU,MAAOV,EACPuB,SAAUf,EACVgB,UAAQ,QAGZ,UAACR,EAAA,QAAD,CAAYJ,UAAU,OAAOQ,UAAU,iBAAvC,WACE,SAACJ,EAAA,QAAD,6BAEA,SAACA,EAAA,UAAD,CACEK,KAAK,QACLC,YAAY,cACZtB,KAAK,QACLU,MAAOR,EACPqB,SAAUf,EACVgB,UAAQ,QAGZ,UAACR,EAAA,QAAD,CAAYJ,UAAU,OAAOQ,UAAU,oBAAvC,WACE,SAACJ,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEK,KAAK,WACLC,YAAY,WACZtB,KAAK,WACLU,MAAON,EACPmB,SAAUf,EACVgB,UAAQ,QAGZ,SAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAA/B,8BAQX,EClFOM,EAAQC,EAAQ,MAAhBD,IAUR,EARqB,WACnB,OACE,SAACA,EAAD,WACE,SAAC/B,EAAD,KAGL,C,8HCNKiB,EAAmBgB,EAAAA,YAAiB,WAMvCC,GAAQ,IALTC,EAKS,EALTA,SACAnB,EAIS,EAJTA,UAIS,IAFToB,GAAIC,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBL,EAAU,OACjDM,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAa,GAAH,OAAMN,EAAN,SACVO,EAAU,GAiBhB,OAhBAL,EAAYM,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYZ,EAAMU,UACjBV,EAAMU,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAQH,IAAaL,EAAb,WAAiCK,GAAa,GAChD,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,GACzD,KACmBI,EAAAA,EAAAA,KAAKhB,GAAD,QAAC,QACvBH,IAAKA,GACFI,GAFmB,IAGtBtB,UAAWsC,IAAAA,WAAA,GAAWtC,EAAWuB,GAAtB,OAA4CO,MAE1D,IACD7B,EAAIsC,YAAc,MAClB,K","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterView.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\n\nimport { authOperations } from 'redux/auth';\n\nexport const RegisterForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col xs={6}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Register\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst { Box } = require('components/Box');\n\nconst RegisterView = () => {\n  return (\n    <Box>\n      <RegisterForm></RegisterForm>\n    </Box>\n  );\n};\n\nexport default RegisterView;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["RegisterForm","contacts","onSubmit","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","currentTarget","value","Container","className","Row","Col","xs","Form","e","preventDefault","authOperations","controlId","type","placeholder","onChange","required","Button","variant","Box","require","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}