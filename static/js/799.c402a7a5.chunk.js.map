{"version":3,"file":"static/js/799.c402a7a5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsView.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Box } from 'components/Box';\n\nexport const ContactForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const currentInputName = e.currentTarget.name;\n    switch (currentInputName) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      window.alert(`${name} is already in contacts!`);\n      return false;\n    }\n\n    onSubmit({ name, number });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"number\">Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaceSs, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      createdAt: PropTypes.string,\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useRemoveContactMutation } from 'redux/contacts/contacts-api';\n\nexport const Contact = ({ id, name, number, onDeleteContact }) => {\n  const [removeContact, { isLoading: isDeleting }] = useRemoveContactMutation();\n  return (\n    <div>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => {\n          removeContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Box } from 'components/Box';\nimport { Contact } from 'components/ContactList/Contact/Contact';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <Box>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            <Contact\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            ></Contact>\n          </li>\n        ))}\n      </ul>\n    </Box>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      createdAt: PropTypes.string,\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ name, onChange }) => {\n  return (\n    <Box>\n      <label htmlFor=\"find\">Find contacts by name</label>\n      <input type=\"text\" name=\"find\" value={name} onChange={onChange} />\n    </Box>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { Box } from 'components/Box';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, setFilter } from 'redux/phonebookSlice';\n\nimport {\n  useAddContactMutation,\n  useGetAllContactsQuery,\n} from 'redux/contacts/contacts-api';\n\nconst ContactsView = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n  const { data: contacts, isLoading, isSuccess } = useGetAllContactsQuery('', {\n    refetchOnMountOrArgChange: true\n  });\n  const [addContact] = useAddContactMutation();\n\n  //get contacts list by filter\n  const getFilteredContacts = () => {\n    if (filter.trim()) {\n      return contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase());\n      });\n    } else return contacts;\n  };\n\n  //redux actions\n  const handleAddContact = ({ name, number }) => {\n    addContact({ name, number });\n  };\n\n  const updateFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  //------------------\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Box>\n      <h2>Phonebook</h2>\n      {!isLoading && isSuccess && (\n        <>\n          <ContactForm\n            contacts={contacts}\n            onSubmit={handleAddContact}\n          ></ContactForm>\n          <h3>Contacts</h3>\n          <Filter name={filter} onChange={updateFilter}></Filter>\n          <ContactList contacts={filteredContacts} />\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default ContactsView;\n"],"names":["ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Box","preventDefault","find","contact","window","alert","htmlFor","type","onChange","pattern","title","required","Contact","id","onDeleteContact","useRemoveContactMutation","removeContact","isDeleting","isLoading","disabled","onClick","ContactList","map","Filter","dispatch","useDispatch","filter","useSelector","getFilter","useGetAllContactsQuery","refetchOnMountOrArgChange","data","isSuccess","useAddContactMutation","addContact","filteredContacts","trim","toLowerCase","includes","setFilter","target"],"sourceRoot":""}