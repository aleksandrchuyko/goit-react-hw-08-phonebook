{"version":3,"file":"static/js/31.68e638cc.chunk.js","mappings":"+OAMaA,EAAe,SAAC,GAA2B,EAAzBC,SAAyB,EAAfC,SAAgB,IACvD,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAwC,IAAD,IAArCC,cAAiBT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MAC7C,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,QACHP,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MACF,QACE,OAEL,EAUD,OACE,SAACC,EAAAA,IAAD,WACE,kBAAMb,SAVW,SAAAc,GACnBA,EAAEC,iBACFP,EAASQ,EAAAA,GAAAA,SAAwB,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAIG,WACE,4BACE,kBAAOU,QAAQ,OAAf,mBACA,kBACEC,KAAK,OACLhB,KAAK,OACLU,MAAOV,EACPiB,SAAUT,EACVU,UAAQ,QAGZ,4BACE,kBAAOH,QAAQ,QAAf,qBACA,kBACEC,KAAK,QACLhB,KAAK,QACLU,MAAOR,EACPe,SAAUT,EACVU,UAAQ,QAGZ,4BACE,kBAAOH,QAAQ,WAAf,uBACA,kBACEC,KAAK,WACLhB,KAAK,WACLU,MAAON,EACPa,SAAUT,EACVU,UAAQ,QAIZ,mBAAQF,KAAK,SAAb,0BAIP,ECzEOL,EAAQQ,EAAQ,MAAhBR,IAUR,EARqB,WACnB,OACE,SAAC,EAAD,WACE,SAACf,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterView.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Box } from 'components/Box';\nimport { authOperations } from 'redux/auth';\n\nexport const RegisterForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <button type=\"submit\">Register</button>\n      </form>\n    </Box>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst { Box } = require('components/Box');\n\nconst RegisterView = () => {\n  return (\n    <Box>\n      <RegisterForm></RegisterForm>\n    </Box>\n  );\n};\n\nexport default RegisterView;\n"],"names":["RegisterForm","contacts","onSubmit","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","currentTarget","value","Box","e","preventDefault","authOperations","htmlFor","type","onChange","required","require"],"sourceRoot":""}