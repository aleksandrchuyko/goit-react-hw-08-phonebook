{"version":3,"file":"static/js/481.57946e76.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/Contact/Contact.jsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","../node_modules/react-bootstrap/esm/CardGroup.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","pages/ContactsView.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\nimport { Box } from 'components/Box';\n\nexport const ContactForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const currentInputName = e.currentTarget.name;\n    switch (currentInputName) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      window.alert(`${name} is already in contacts!`);\n      return false;\n    }\n\n    onSubmit({ name, number });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n          <Form.Label>Contact name</Form.Label>\n\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicNumber\">\n          <Form.Label>Phone number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaceSs, dashes, parentheses and can start with +\"\n            required\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      createdAt: PropTypes.string,\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { useRemoveContactMutation } from 'redux/contacts/contacts-api';\n\nexport const Contact = ({ id, name, number, onDeleteContact }) => {\n  const [removeContact, { isLoading: isDeleting }] = useRemoveContactMutation();\n  return (\n    <div>\n      <p className=\"mb-2\">\n        <b>{name}:</b> {number}\n      </p>\n      <Button\n        variant=\"outline-secondary\"\n        size=\"sm\"\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => {\n          removeContact(id);\n        }}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import { Contact } from 'components/ContactList/Contact/Contact';\nimport PropTypes from 'prop-types';\nimport { Container, ListGroup } from 'react-bootstrap';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <Container>\n      <ListGroup variant=\"flush\">\n        {contacts.map(contact => (\n          <ListGroup.Item key={contact.id}>\n            <Contact\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            ></Contact>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      createdAt: PropTypes.string,\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\n\nexport const Filter = ({ name, onChange }) => {\n  return (\n    <Box>\n      <Form>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n          <Form.Label>Search</Form.Label>\n\n          <Form.Control\n            type=\"text\"\n            name=\"find\"\n            value={name}\n            onChange={onChange}\n          />\n        </Form.Group>\n      </Form>\n    </Box>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-group');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, setFilter } from 'redux/phonebookSlice';\n\nimport {\n  useAddContactMutation,\n  useGetAllContactsQuery,\n} from 'redux/contacts/contacts-api';\nimport { Card, CardGroup, Container } from 'react-bootstrap';\n\nconst ContactsView = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n  const {\n    data: contacts,\n    isLoading,\n    isSuccess,\n  } = useGetAllContactsQuery('', {\n    refetchOnMountOrArgChange: true,\n  });\n  const [addContact] = useAddContactMutation();\n\n  //get contacts list by filter\n  const getFilteredContacts = () => {\n    if (filter.trim()) {\n      return contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase());\n      });\n    } else return contacts;\n  };\n\n  //redux actions\n  const handleAddContact = ({ name, number }) => {\n    addContact({ name, number });\n  };\n\n  const updateFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  //------------------\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Container className=\"mt-2\">\n      {!isLoading && isSuccess && (\n        <CardGroup>\n          <Card>\n            <Card.Body>\n              <Card.Title>New contact</Card.Title>\n              <ContactForm\n                contacts={contacts}\n                onSubmit={handleAddContact}\n              ></ContactForm>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>Your contacts</Card.Title>\n              <Filter name={filter} onChange={updateFilter}></Filter>\n              <ContactList contacts={filteredContacts} />\n            </Card.Body>\n          </Card>\n        </CardGroup>\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsView;\n"],"names":["ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Box","Form","preventDefault","find","contact","window","alert","className","controlId","type","onChange","pattern","title","required","Button","variant","Contact","id","onDeleteContact","useRemoveContactMutation","removeContact","isDeleting","isLoading","size","disabled","onClick","ListGroupItem","React","ref","bsPrefix","active","eventKey","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","stopPropagation","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","ContactList","Container","map","Filter","createWithBsPrefix","CardImg","prefix","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","dispatch","useDispatch","filter","useSelector","getFilter","useGetAllContactsQuery","refetchOnMountOrArgChange","data","isSuccess","useAddContactMutation","addContact","filteredContacts","trim","toLowerCase","includes","CardGroup","setFilter","target"],"sourceRoot":""}